{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Date","startDate","onStartDateChange","EndDate","onEndDateChange","midDate","setMidDate","useEffect","middate","getTime","console","log","className","onChange","value","toLocaleString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAkCeA,MA7Bf,WAAgB,IAAD,EAC0BC,mBAAS,IAAIC,MADvC,mBACNC,EADM,KACKC,EADL,OAEsBH,mBAAS,IAAIC,MAFnC,mBAENG,EAFM,KAEGC,EAFH,OAGiBL,mBAAS,IAAIC,MAH9B,mBAGNK,EAHM,KAGGC,EAHH,KAWb,OANAC,qBAAU,WACR,IAAIC,EAAU,IAAIR,MAAMC,EAAUQ,UAAYN,EAAQM,WAAa,GACnEH,EAAW,IAAIN,KAAKQ,IACpBE,QAAQC,IAAIN,KACX,CAACJ,EAAWE,IAGb,qBAAKS,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,8BACE,cAAC,IAAD,CAAgBC,SAAUX,EAAmBY,MAAOb,MAEtD,8BACE,cAAC,IAAD,CAAgBY,SAAUT,EAAiBU,MAAOX,MAEpD,gCACE,2CACA,4BAAIE,EAAQU,4BCfPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7056469.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [startDate, onStartDateChange] = useState(new Date());\n  const [EndDate, onEndDateChange] = useState(new Date());\n  const [midDate, setMidDate] = useState(new Date());\n\n  useEffect(() => {\n    var middate = new Date((startDate.getTime() + EndDate.getTime()) / 2);\n    setMidDate(new Date(middate));\n    console.log(midDate);\n  }, [startDate, EndDate]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <DateTimePicker onChange={onStartDateChange} value={startDate} />\n        </div>\n        <div>\n          <DateTimePicker onChange={onEndDateChange} value={EndDate} />\n        </div>\n        <div>\n          <h2> Mid Date</h2>\n          <p>{midDate.toLocaleString()}</p>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}